<?php

	namespace umono\multiple\model;

	use umono\multiple\tools\page\FormatTableData;
	use yii\db\ActiveRecord;
	use yii\db\Exception;

	abstract class BaseActiveRecordModel extends ActiveRecord
	{

		use FormatTableData;

		/**
		 * 格式化所有数据 提供导出时的数据 也可做为循环数据处理
		 *
		 * @param       $model
		 * @param bool  $info
		 * @param array $options
		 * @return mixed
		 */
		abstract static function transFormatData($model, bool $info = false, array $options = []);


		/**
		 * @param ActiveRecord $model
		 * @return mixed|string
		 */
		public static function getModelError(ActiveRecord $model)
		{
			$errors = $model->getErrors();    //得到所有的错误信息
			if (!is_array($errors)) {
				return '';
			}
			$firstError = array_shift($errors);
			if (!is_array($firstError)) {
				return '';
			}
			return array_shift($firstError);
		}

		/**
		 * @throws Exception
		 */
		public function save($runValidation = true, $attributeNames = null): bool
		{
			$save = parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
			if (!$save) {
				self::msgModel($this);
			}
			return $save;
		}


		/**
		 * @throws Exception
		 */
		private static function msgModel($model): void
		{
			$msg = self::getModelError($model);
			throw new Exception($msg);
		}
	}