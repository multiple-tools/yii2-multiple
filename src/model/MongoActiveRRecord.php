<?php
	declare(strict_types=1);

	namespace umono\multiple\model;

	use umono\multiple\helpers\StringHelper;
	use umono\multiple\tools\page\FormatTableData;
	use umono\multiple\tools\page\SqlPageCache;
	use Yii;

	class MongoActiveRRecord extends \yii\mongodb\ActiveRecord
	{
		use FormatTableData;

		public static function getDb()
		{
			return parent::getDb(); // TODO: Change the autogenerated stub
		}


		public static function find()
		{
			$name = static::collectionName();
			return parent::find()->from($name[1]);
		}

		public $custandWhere = []; // [ ['custom',column,value] ]

		public function getTablesParam($where = [], $table = [])
		{
			$arr = $this->attributes();
			$this->formatParam($where);

			foreach ($where as $k => &$v) {
				if (!is_array($v)) {
					if (in_array($k, $arr)) {
						$v = (string)$v;
					} else {
						unset($where[$k]);
					}
				}
				unset($v);
			}
			$query = static::find()->with($table);
			if (!empty($where)) {
				$query->where($where);
			}


			foreach ($this->custandWhere as $v) {
				$query->andWhere($v);
			}


			$count = $query->count();


			$uid = StringHelper::guid();
			SqlPageCache::writeSql(serialize($query->orderBy($this->orderBy)), $uid);
			$query = $query->offset($this->offset)
				->limit($this->limit)
				->orderBy($this->orderBy);
			$data  = $query->asArray()->all();

			return ['data' => $data, 'count' => (int)$count, 'uid' => $uid];
		}


		protected $limit = 20;
		protected $page = 1;
		protected $offset;
		public $orderBy = [];

		public function formatParam($_param)
		{
			$param = \Yii::$app->request->get();
			if (!isset($param['limit'])) {
				$param = $_param;
			}
			$limit = $param['limit'] ?? $this->limit;

			$page = $param['page'] ?? $this->page;

			$offset = $limit * ($page - 1);

			$this->offset = $offset;

			$this->limit = $limit;

			$this->page = $page;
			unset($param);
			unset($_param);
		}

		/**
		 * limit page 重设
		 *
		 * @param $limit
		 * @param $page
		 */
		public function setPageLimit($limit, $page)
		{
			if (!empty($limit)) {
				$this->limit = $limit;
			}
			if (!empty($page)) {
				$this->page = $page;
			}
		}


	}